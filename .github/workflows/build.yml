name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup environment
      uses: actions/setup-node@v2
	  with:
		node-version: '14'

    - name: Build project
      run: npm install && npm run build

    - name: Get version from manifest
      id: get_version
      run: echo "::set-output name=version::$(cat manifest.json | jq -r .version)"
      shell: bash

    - name: Get latest release
      id: get_release
      uses: actions/github-script@v5
      with:
        script: |
          const releases = await github.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          return releases.data[0].tag_name;

    - name: Compare versions and create new release if necessary
      uses: actions/github-script@v5
      with:
        script: |
          const manifestVersion = "${{ steps.get_version.outputs.version }}";
          const releaseVersion = "${{ steps.get_release.outputs.result }}";
          if (manifestVersion === releaseVersion) {
            const release = await github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: manifestVersion,
              name: `Release ${manifestVersion}`,
            });
          }